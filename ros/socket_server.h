//==================================================
//ソケットサーバクラスのヘッダ
//
//author: Yutaro ISHIDA
//==================================================


#pragma once


#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <string.h>
#include <iostream>
#include <sstream>
#include <fstream>
#include <vector>

#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <unistd.h>


using namespace std;


//==================================================
//パラメータ
//==================================================


//==================================================
//グローバル
//==================================================


//==================================================
//ソケットサーバクラス
//==================================================
class SocketServer{
private:
    struct sockaddr_in sockaddr_in_server_;
    int socket_server_;

    struct sockaddr_in sockaddr_in_client_;
    int socket_client_;

    fd_set fds_;

    struct timeval tv_;


public:
    //==================================================
    //コンストラクタ
    //==================================================
    SocketServer(int port); 


    //==================================================
    //デストラクタ
    //==================================================
    ~SocketServer();


    //==================================================
    //接続する関数
    //==================================================
    bool open_socket(void);


    //==================================================
    //切断する関数
    //==================================================
    bool close_socket(void);


    //==================================================
    //送信する関数
    //==================================================
    bool snd(float snd_data[], size_t snd_data_size);


    //==================================================
    //受信する関数
    //==================================================
    bool rcv(float rcv_data[], size_t rcv_data_size);
};
